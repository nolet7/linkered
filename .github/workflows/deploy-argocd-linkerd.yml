      - name: Create Argo CD Applications (CRDs, CNI, Control-Plane, Viz)
        env:
          ENV: ${{ github.event.inputs.environment || 'dev' }}
        run: |
          set -euo pipefail

          # --- CRDs (wave -2)
          cat > /tmp/linkerd-crds-${ENV}.yaml <<'EOF_CRDS'
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: linkerd-crds-__ENV__
            namespace: argocd
            annotations:
              argocd.argoproj.io/sync-wave: "-2"
          spec:
            project: platform-tools
            source:
              repoURL: https://helm.linkerd.io/stable
              chart: linkerd-crds
              targetRevision: "*"
            destination:
              server: https://kubernetes.default.svc
              namespace: linkerd
            syncPolicy:
              automated:
                selfHeal: true
                prune: true
              syncOptions: [ CreateNamespace=true ]
          EOF_CRDS
          sed -i "s/__ENV__/$ENV/g" /tmp/linkerd-crds-${ENV}.yaml
          kubectl apply -f /tmp/linkerd-crds-${ENV}.yaml

          # --- CNI (wave -1)
          cat > /tmp/linkerd-cni-${ENV}.yaml <<'EOF_CNI'
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: linkerd-cni-__ENV__
            namespace: argocd
            annotations:
              argocd.argoproj.io/sync-wave: "-1"
          spec:
            project: platform-tools
            source:
              repoURL: https://helm.linkerd.io/stable
              chart: linkerd-cni
              targetRevision: "*"
              helm:
                values: |
                  installNamespace: true
            destination:
              server: https://kubernetes.default.svc
              namespace: linkerd-cni
            syncPolicy:
              automated:
                selfHeal: true
                prune: true
              syncOptions: [ CreateNamespace=true ]
          EOF_CNI
          sed -i "s/__ENV__/$ENV/g" /tmp/linkerd-cni-${ENV}.yaml
          kubectl apply -f /tmp/linkerd-cni-${ENV}.yaml

          # --- Control-plane (wave 0)
          if [ "$ENV" = "dev" ]; then
            # Build the Application by stitching header + indented values + footer
            {
              cat <<'EOF_CP_HDR'
              apiVersion: argoproj.io/v1alpha1
              kind: Application
              metadata:
                name: linkerd-control-plane-dev
                namespace: argocd
                annotations:
                  argocd.argoproj.io/sync-wave: "0"
              spec:
                project: platform-tools
                sources:
                  - repoURL: https://github.com/${GITHUB_REPOSITORY}
                    targetRevision: '"${DEFAULT_BRANCH}"'
                    path: argocd/rbac
                  - repoURL: https://helm.linkerd.io/stable
                    chart: linkerd-control-plane
                    targetRevision: "*"
                    helm:
                      values: |
              EOF_CP_HDR
              sed 's/^/                        /' helm-values/dev/control-plane-values.yaml
              cat <<'EOF_CP_FTR'
                destination:
                  server: https://kubernetes.default.svc
                  namespace: linkerd
                syncPolicy:
                  automated:
                    selfHeal: true
                    prune: true
                  syncOptions: [ CreateNamespace=true ]
                ignoreDifferences:
                  - group: admissionregistration.k8s.io
                    kind: MutatingWebhookConfiguration
                    jqPathExpressions: [ ".webhooks[]?.clientConfig.caBundle" ]
              EOF_CP_FTR
            } > /tmp/linkerd-cp-${ENV}.yaml
            kubectl apply -f /tmp/linkerd-cp-${ENV}.yaml
          else
            # Create a temp values file that includes the trust anchor from the ConfigMap we created earlier
            TA_FILE=/tmp/trust-anchor-${ENV}.crt
            # Pull from the CM we applied earlier (created in the previous step)
            kubectl -n linkerd get cm linkerd-identity-trust-roots -o jsonpath='{.data.ca-bundle\.crt}' > "$TA_FILE"

            # Compose a minimal values file (externalCA + CNI + trust anchors)
            VALS=/tmp/cp-values-${ENV}.yaml
            {
              echo "installNamespace: false"
              echo "controllerReplicas: 2"
              echo "cniEnabled: true"
              echo "identity:"
              echo "  externalCA: true"
              echo "identityTrustAnchorsPEM: |"
              sed 's/^/  /' "$TA_FILE"
            } > "$VALS"

            # Stitch header + indented values + footer
            {
              cat <<'EOF_CP_HDR2'
              apiVersion: argoproj.io/v1alpha1
              kind: Application
              metadata:
                name: linkerd-control-plane-__ENV__
                namespace: argocd
                annotations:
                  argocd.argoproj.io/sync-wave: "0"
              spec:
                project: platform-tools
                sources:
                  - repoURL: https://github.com/${GITHUB_REPOSITORY}
                    targetRevision: '"${DEFAULT_BRANCH}"'
                    path: argocd/rbac
                  - repoURL: https://helm.linkerd.io/stable
                    chart: linkerd-control-plane
                    targetRevision: "*"
                    helm:
                      values: |
              EOF_CP_HDR2
              sed 's/^/                        /' "$VALS"
              cat <<'EOF_CP_FTR2'
                destination:
                  server: https://kubernetes.default.svc
                  namespace: linkerd
                syncPolicy:
                  automated:
                    selfHeal: true
                    prune: true
                  syncOptions: [ CreateNamespace=true ]
                ignoreDifferences:
                  - group: admissionregistration.k8s.io
                    kind: MutatingWebhookConfiguration
                    jqPathExpressions: [ ".webhooks[]?.clientConfig.caBundle" ]
              EOF_CP_FTR2
            } > /tmp/linkerd-cp-${ENV}.yaml
            sed -i "s/__ENV__/$ENV/g" /tmp/linkerd-cp-${ENV}.yaml
            kubectl apply -f /tmp/linkerd-cp-${ENV}.yaml
          fi

          # --- Viz (wave +1)
          cat > /tmp/linkerd-viz-${ENV}.yaml <<'EOF_VIZ'
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: linkerd-viz-__ENV__
            namespace: argocd
            annotations:
              argocd.argoproj.io/sync-wave: "+1"
          spec:
            project: platform-tools
            source:
              repoURL: https://helm.linkerd.io/stable
              chart: linkerd-viz
              targetRevision: "*"
              helm:
                values: |
                  installNamespace: false
            destination:
              server: https://kubernetes.default.svc
              namespace: linkerd-viz
            syncPolicy:
              automated:
                selfHeal: true
                prune: true
              syncOptions: [ CreateNamespace=true ]
          EOF_VIZ
          sed -i "s/__ENV__/$ENV/g" /tmp/linkerd-viz-${ENV}.yaml
          kubectl apply -f /tmp/linkerd-viz-${ENV}.yaml
